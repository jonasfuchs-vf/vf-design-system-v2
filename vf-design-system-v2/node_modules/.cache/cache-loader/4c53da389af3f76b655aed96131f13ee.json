{"remainingRequest":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/resources.md","dependencies":[{"path":"/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/resources.md","mtime":1579017378779},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/.docusaurus/docusaurus-plugin-content-docs/site-own-cloud-ux-fileserver-design-system-docs-resources-md-f2b.json","mtime":1580654765085},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2pvbmFzLmZ1Y2hzL2Rlc2lnbi1zeXN0ZW0vZG9jdS10ZXN0L3ZmLWRlc2lnbi1zeXN0ZW0tdjIvdmYtZGVzaWduLXN5c3RlbS12Mi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL2pvbmFzLmZ1Y2hzL2Rlc2lnbi1zeXN0ZW0vZG9jdS10ZXN0L3ZmLWRlc2lnbi1zeXN0ZW0tdjIvdmYtZGVzaWduLXN5c3RlbS12Mi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDoncmVzb3VyY2VzJyx0aXRsZTonUmVzb3VyY2VzJyxzaWRlYmFyX2xhYmVsOidSZXNvdXJjZXMnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJyZXNvdXJjZXMiLCJ0aXRsZSI6IlJlc291cmNlcyIsImRlc2NyaXB0aW9uIjoiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gUGVsbGVudGVzcXVlIGVsZW1lbnR1bSBkaWduaXNzaW0gdWx0cmljaWVzLiBGdXNjZSByaG9uY3VzIGlwc3VtIHRlbXBvciBlcm9zIGFsaXF1YW0gY29uc2VxdWF0LiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBWaXZhbXVzIGVsZW1lbnR1bSBtYXNzYSBlZ2V0IG51bGxhIGFsaXF1ZXQgc2FnaXR0aXMuIFByb2luIG9kaW8gdG9ydG9yLCB2dWxwdXRhdGUgdXQgb2RpbyBpbiwgdWx0cmljZXMgdWx0cmljaWVzIGF1Z3VlLiBDcmFzIG9ybmFyZSB1bHRyaWNlcyBsb3JlbSBtYWxlc3VhZGEgaWFjdWxpcy4gRXRpYW0gc2l0IGFtZXQgbGliZXJvIHRlbXBvciwgcHVsdmluYXIgbWF1cmlzIHNlZCwgc29sbGljaXR1ZGluIHNhcGllbi4iLCJzb3VyY2UiOiJAc2l0ZS8uLi8uLi8uLi8uLi9vd25DbG91ZC9VWC1GaWxlc2VydmVyL0Rlc2lnbi1TeXN0ZW0vZG9jcy9yZXNvdXJjZXMubWQiLCJwZXJtYWxpbmsiOiIvdmYtZGVzaWduLXN5c3RlbS12Mi9kb2NzL3Jlc291cmNlcyIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlLy4uLy4uLy4uLy4uL293bkNsb3VkL1VYLUZpbGVzZXJ2ZXIvRGVzaWduLVN5c3RlbS9kb2NzL3Jlc291cmNlcy5tZCIsInNpZGViYXJfbGFiZWwiOiJSZXNvdXJjZXMifTsvKiBAanN4IG1keCAqL2V4cG9ydCB2YXIgcmlnaHRUb2M9W3t2YWx1ZTonUmVzb3VyY2VzJyxpZDoncmVzb3VyY2VzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTa2V0Y2gnLGlkOidza2V0Y2gnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1Bob3Rvc2hvcCcsaWQ6J3Bob3Rvc2hvcCcsY2hpbGRyZW46W119XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gUGVsbGVudGVzcXVlIGVsZW1lbnR1bSBkaWduaXNzaW0gdWx0cmljaWVzLiBGdXNjZSByaG9uY3VzIGlwc3VtIHRlbXBvciBlcm9zIGFsaXF1YW0gY29uc2VxdWF0LiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBWaXZhbXVzIGVsZW1lbnR1bSBtYXNzYSBlZ2V0IG51bGxhIGFsaXF1ZXQgc2FnaXR0aXMuIFByb2luIG9kaW8gdG9ydG9yLCB2dWxwdXRhdGUgdXQgb2RpbyBpbiwgdWx0cmljZXMgdWx0cmljaWVzIGF1Z3VlLiBDcmFzIG9ybmFyZSB1bHRyaWNlcyBsb3JlbSBtYWxlc3VhZGEgaWFjdWxpcy4gRXRpYW0gc2l0IGFtZXQgbGliZXJvIHRlbXBvciwgcHVsdmluYXIgbWF1cmlzIHNlZCwgc29sbGljaXR1ZGluIHNhcGllbi4iKSxtZHgoImgyIix7ImlkIjoicmVzb3VyY2VzIn0sIlJlc291cmNlcyIpLG1keCgicCIsbnVsbCwiTnVsbGEgZmFjaWxpc2kuIE1hZWNlbmFzIHNvZGFsZXMgbmVjIHB1cnVzIGVnZXQgcG9zdWVyZS4gU2VkIHNhcGllbiBxdWFtLCBwcmV0aXVtIGEgcmlzdXMgaW4sIHBvcnR0aXRvciBkYXBpYnVzIGVyYXQuIFNlZCBzaXQgYW1ldCBmcmluZ2lsbGEgaXBzdW0sIGVnZXQgaWFjdWxpcyBhdWd1ZS4gSW50ZWdlciBzb2xsaWNpdHVkaW4gdG9ydG9yIHF1aXMgdWx0cmljaWVzIGFsaXF1YW0uIFN1c3BlbmRpc3NlIGZyaW5naWxsYSBudW5jIGluIHRlbGx1cyBjdXJzdXMsIGF0IHBsYWNlcmF0IHRlbGx1cyBzY2VsZXJpc3F1ZS4gU2VkIHRlbXB1cyBlbGl0IGEgc29sbGljaXR1ZGluIHJob25jdXMuIE51bGxhIGZhY2lsaXNpLiBNb3JiaSBuZWMgZG9sb3IgZG9sb3IuIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIENyYXMgZXQgYWxpcXVldCBsZWN0dXMuIFBlbGxlbnRlc3F1ZSBzaXQgYW1ldCBlcm9zIG5pc2kuIFF1aXNxdWUgYWMgc2FwaWVuIGluIHNhcGllbiBjb25ndWUgYWNjdW1zYW4uIE51bGxhbSBpbiBwb3N1ZXJlIGFudGUuIFZlc3RpYnVsdW0gYW50ZSBpcHN1bSBwcmltaXMgaW4gZmF1Y2lidXMgb3JjaSBsdWN0dXMgZXQgdWx0cmljZXMgcG9zdWVyZSBjdWJpbGlhIEN1cmFlOyBQcm9pbiBsYWNpbmlhIGxlbyBhIG5pYmggZnJpbmdpbGxhIHBoYXJldHJhLiIpLG1keCgiaDIiLHsiaWQiOiJza2V0Y2gifSwiU2tldGNoIiksbWR4KCJwIixudWxsLCJPcmNpIHZhcml1cyBuYXRvcXVlIHBlbmF0aWJ1cyBldCBtYWduaXMgZGlzIHBhcnR1cmllbnQgbW9udGVzLCBuYXNjZXR1ciByaWRpY3VsdXMgbXVzLiBQcm9pbiB2ZW5lbmF0aXMgbGVjdHVzIGR1aSwgdmVsIHVsdHJpY2VzIGFudGUgYmliZW5kdW0gaGVuZHJlcml0LiBBZW5lYW4gZWdlc3RhcyBmZXVnaWF0IGR1aSBpZCBoZW5kcmVyaXQuIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIEN1cmFiaXR1ciBpbiB0ZWxsdXMgbGFvcmVldCwgZWxlaWZlbmQgbnVuYyBpZCwgdml2ZXJyYSBsZW8uIFByb2luIHZ1bHB1dGF0ZSBub24gZG9sb3IgdmVsIHZ1bHB1dGF0ZS4gQ3VyYWJpdHVyIHByZXRpdW0gbG9ib3J0aXMgZmVsaXMsIHNpdCBhbWV0IGZpbmlidXMgbG9yZW0gc3VzY2lwaXQgdXQuIFNlZCBub24gbW9sbGlzIHJpc3VzLiBEdWlzIHNhZ2l0dGlzLCBtaSBpbiBldWlzbW9kIHRpbmNpZHVudCwgbnVuYyBtYXVyaXMgdmVzdGlidWx1bSB1cm5hLCBhdCBldWlzbW9kIGVzdCBlbGl0IHF1aXMgZXJhdC4gUGhhc2VsbHVzIGFjY3Vtc2FuIHZpdGFlIG5lcXVlIGV1IHBsYWNlcmF0LiBJbiBlbGVtZW50dW0gYXJjdSBuZWMgdGVsbHVzIGltcGVyZGlldCwgZWdldCBtYXhpbXVzIG51bGxhIHNvZGFsZXMuIEN1cmFiaXR1ciBldSBzYXBpZW4gZWdldCBuaXNsIHNvZGFsZXMgZmVybWVudHVtLiIpLG1keCgiaDIiLHsiaWQiOiJwaG90b3Nob3AifSwiUGhvdG9zaG9wIiksbWR4KCJwIixudWxsLCJQaGFzZWxsdXMgcHVsdmluYXIgZXggaWQgY29tbW9kbyBpbXBlcmRpZXQuIFByYWVzZW50IG9kaW8gbmliaCwgc29sbGljaXR1ZGluIHNpdCBhbWV0IGZhdWNpYnVzIGlkLCBwbGFjZXJhdCBhdCBtZXR1cy4gRG9uZWMgdml0YWUgZXJvcyB2aXRhZSB0b3J0b3IgaGVuZHJlcml0IGZpbmlidXMuIEludGVyZHVtIGV0IG1hbGVzdWFkYSBmYW1lcyBhYyBhbnRlIGlwc3VtIHByaW1pcyBpbiBmYXVjaWJ1cy4gUXVpc3F1ZSB2aXRhZSBwdXJ1cyBkb2xvci4gRHVpcyBzdXNjaXBpdCBhYyBudWxsYSBldCBmaW5pYnVzLiBQaGFzZWxsdXMgYWMgc2VtIHNlZCBkdWkgZGljdHVtIGdyYXZpZGEuIFBoYXNlbGx1cyBlbGVpZmVuZCB2ZXN0aWJ1bHVtIGZhY2lsaXNpcy4gSW50ZWdlciBwaGFyZXRyYSBuZWMgZW5pbSB2aXRhZSBtYXR0aXMuIER1aXMgYXVjdG9yLCBsZWN0dXMgcXVpcyBjb25kaW1lbnR1bSBiaWJlbmR1bSwgbnVuYyBkb2xvciBhbGlxdWFtIG1hc3NhLCBpZCBiaWJlbmR1bSBvcmNpIHZlbGl0IHF1aXMgbWFnbmEuIFV0IHZvbHV0cGF0IG51bGxhIG51bmMsIHNlZCBpbnRlcmR1bSBtYWduYSBjb25kaW1lbnR1bSBub24uIFNlZCB1cm5hIG1ldHVzLCBzY2VsZXJpc3F1ZSB2aXRhZSBjb25zZWN0ZXR1ciBhLCBmZXVnaWF0IHF1aXMgbWFnbmEuIERvbmVjIGRpZ25pc3NpbSBvcm5hcmUgbmlzbCwgZWdldCB0ZW1wb3IgcmlzdXMgbWFsZXN1YWRhIHF1aXMuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}