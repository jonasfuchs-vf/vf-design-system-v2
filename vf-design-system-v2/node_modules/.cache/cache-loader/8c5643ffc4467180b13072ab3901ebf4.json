{"remainingRequest":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/animation.md","dependencies":[{"path":"/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/animation.md","mtime":1579514931961},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/.docusaurus/docusaurus-plugin-content-docs/site-own-cloud-ux-fileserver-design-system-docs-animation-md-931.json","mtime":1580654765084},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2pvbmFzLmZ1Y2hzL2Rlc2lnbi1zeXN0ZW0vZG9jdS10ZXN0L3ZmLWRlc2lnbi1zeXN0ZW0tdjIvdmYtZGVzaWduLXN5c3RlbS12Mi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL2pvbmFzLmZ1Y2hzL2Rlc2lnbi1zeXN0ZW0vZG9jdS10ZXN0L3ZmLWRlc2lnbi1zeXN0ZW0tdjIvdmYtZGVzaWduLXN5c3RlbS12Mi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDonYW5pbWF0aW9uJyx0aXRsZTonQW5pbWF0aW9uJyxzaWRlYmFyX2xhYmVsOidBbmltYXRpb24nfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsiaWQiOiJhbmltYXRpb24iLCJ0aXRsZSI6IkFuaW1hdGlvbiIsImRlc2NyaXB0aW9uIjoiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gUGVsbGVudGVzcXVlIGVsZW1lbnR1bSBkaWduaXNzaW0gdWx0cmljaWVzLiBGdXNjZSByaG9uY3VzIGlwc3VtIHRlbXBvciBlcm9zIGFsaXF1YW0gY29uc2VxdWF0LiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBWaXZhbXVzIGVsZW1lbnR1bSBtYXNzYSBlZ2V0IG51bGxhIGFsaXF1ZXQgc2FnaXR0aXMuIFByb2luIG9kaW8gdG9ydG9yLCB2dWxwdXRhdGUgdXQgb2RpbyBpbiwgdWx0cmljZXMgdWx0cmljaWVzIGF1Z3VlLiBDcmFzIG9ybmFyZSB1bHRyaWNlcyBsb3JlbSBtYWxlc3VhZGEgaWFjdWxpcy4gRXRpYW0gc2l0IGFtZXQgbGliZXJvIHRlbXBvciwgcHVsdmluYXIgbWF1cmlzIHNlZCwgc29sbGljaXR1ZGluIHNhcGllbi4iLCJzb3VyY2UiOiJAc2l0ZS8uLi8uLi8uLi8uLi9vd25DbG91ZC9VWC1GaWxlc2VydmVyL0Rlc2lnbi1TeXN0ZW0vZG9jcy9hbmltYXRpb24ubWQiLCJwZXJtYWxpbmsiOiIvdmYtZGVzaWduLXN5c3RlbS12Mi9kb2NzL2FuaW1hdGlvbiIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlLy4uLy4uLy4uLy4uL293bkNsb3VkL1VYLUZpbGVzZXJ2ZXIvRGVzaWduLVN5c3RlbS9kb2NzL2FuaW1hdGlvbi5tZCIsInNpZGViYXJfbGFiZWwiOiJBbmltYXRpb24iLCJzaWRlYmFyIjoiZ3VpZGVsaW5lcyIsInByZXZpb3VzIjp7InRpdGxlIjoiSW50ZXJhY3Rpb24iLCJwZXJtYWxpbmsiOiIvdmYtZGVzaWduLXN5c3RlbS12Mi9kb2NzL2ludGVyYWN0aW9uIn0sIm5leHQiOnsidGl0bGUiOiJBY2Nlc3NhYmlsaXR5IiwicGVybWFsaW5rIjoiL3ZmLWRlc2lnbi1zeXN0ZW0tdjIvZG9jcy9hY2Nlc3NhYmlsaXR5In19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidIaWVyIGdlaHTCtHMgdW0gQW5pbWF0aW9uZW4nLGlkOidoaWVyLWdlaHTCtHMtdW0tYW5pbWF0aW9uZW4nLGNoaWxkcmVuOltdfSx7dmFsdWU6J051bGxhJyxpZDonbnVsbGEnLGNoaWxkcmVuOltdfSx7dmFsdWU6J09yY2knLGlkOidvcmNpJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidQaGFzZWxsdXMnLGlkOidwaGFzZWxsdXMnLGNoaWxkcmVuOltdfV07dmFyIG1ha2VTaG9ydGNvZGU9ZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKXtyZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcyl7Y29uc29sZS53YXJuKCJDb21wb25lbnQgIituYW1lKyIgd2FzIG5vdCBpbXBvcnRlZCwgZXhwb3J0ZWQsIG9yIHByb3ZpZGVkIGJ5IE1EWFByb3ZpZGVyIGFzIGdsb2JhbCBzY29wZSIpO3JldHVybiBtZHgoImRpdiIscHJvcHMpO307fTt2YXIgbGF5b3V0UHJvcHM9e3JpZ2h0VG9jOnJpZ2h0VG9jfTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxfZXh0ZW5kcyh7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoInAiLG51bGwsIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nIGVsaXQuIFBlbGxlbnRlc3F1ZSBlbGVtZW50dW0gZGlnbmlzc2ltIHVsdHJpY2llcy4gRnVzY2UgcmhvbmN1cyBpcHN1bSB0ZW1wb3IgZXJvcyBhbGlxdWFtIGNvbnNlcXVhdC4gTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gVml2YW11cyBlbGVtZW50dW0gbWFzc2EgZWdldCBudWxsYSBhbGlxdWV0IHNhZ2l0dGlzLiBQcm9pbiBvZGlvIHRvcnRvciwgdnVscHV0YXRlIHV0IG9kaW8gaW4sIHVsdHJpY2VzIHVsdHJpY2llcyBhdWd1ZS4gQ3JhcyBvcm5hcmUgdWx0cmljZXMgbG9yZW0gbWFsZXN1YWRhIGlhY3VsaXMuIEV0aWFtIHNpdCBhbWV0IGxpYmVybyB0ZW1wb3IsIHB1bHZpbmFyIG1hdXJpcyBzZWQsIHNvbGxpY2l0dWRpbiBzYXBpZW4uIiksbWR4KCJoMiIseyJpZCI6ImhpZXItZ2VodMK0cy11bS1hbmltYXRpb25lbiJ9LCJIaWVyIGdlaHRceEI0cyB1bSBBbmltYXRpb25lbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiTWF1cmlzIHZlc3RpYnVsdW0gdWxsYW1jb3JwZXIgbmliaCwgdXQgc2VtcGVyIHB1cnVzIHB1bHZpbmFyIHV0LiBEb25lYyB2b2x1dHBhdCBvcmNpIHNpdCBhbWV0IG1hdXJpcyBtYWxlc3VhZGEsIG5vbiBwdWx2aW5hciBhdWd1ZSBhbGlxdWFtLiBWZXN0aWJ1bHVtIHVsdHJpY2llcyBhdCB1cm5hIHV0IHN1c2NpcGl0LiBNb3JiaSBpYWN1bGlzLCBlcmF0IGF0IGltcGVyZGlldCBzZW1wZXIsIGlwc3VtIG51bGxhIHNvZGFsZXMgZXJhdCwgZWdldCB0aW5jaWR1bnQganVzdG8gZHVpIHF1aXMganVzdG8uIFBlbGxlbnRlc3F1ZSBkaWN0dW0gYmliZW5kdW0gZGlhbSBhdCBhbGlxdWV0LiBTZWQgcHVsdmluYXIsIGRvbG9yIHF1aXMgZmluaWJ1cyBvcm5hcmUsIGVyb3Mgb2RpbyBmYWNpbGlzaXMgZXJhdCwgZXUgcmhvbmN1cyBudW5jIGR1aSBzZWQgZXguIE51bmMgZ3JhdmlkYSBkdWkgbWFzc2EsIHNlZCBvcm5hcmUgYXJjdSB0aW5jaWR1bnQgc2l0IGFtZXQuIE1hZWNlbmFzIGVmZmljaXR1ciBzYXBpZW4gbmVxdWUsIGEgbGFvcmVldCBsaWJlcm8gZmV1Z2lhdCB1dC5cbiIpKSxtZHgoImgyIix7ImlkIjoibnVsbGEifSwiTnVsbGEiKSxtZHgoInAiLG51bGwsIk51bGxhIGZhY2lsaXNpLiBNYWVjZW5hcyBzb2RhbGVzIG5lYyBwdXJ1cyBlZ2V0IHBvc3VlcmUuIFNlZCBzYXBpZW4gcXVhbSwgcHJldGl1bSBhIHJpc3VzIGluLCBwb3J0dGl0b3IgZGFwaWJ1cyBlcmF0LiBTZWQgc2l0IGFtZXQgZnJpbmdpbGxhIGlwc3VtLCBlZ2V0IGlhY3VsaXMgYXVndWUuIEludGVnZXIgc29sbGljaXR1ZGluIHRvcnRvciBxdWlzIHVsdHJpY2llcyBhbGlxdWFtLiBTdXNwZW5kaXNzZSBmcmluZ2lsbGEgbnVuYyBpbiB0ZWxsdXMgY3Vyc3VzLCBhdCBwbGFjZXJhdCB0ZWxsdXMgc2NlbGVyaXNxdWUuIFNlZCB0ZW1wdXMgZWxpdCBhIHNvbGxpY2l0dWRpbiByaG9uY3VzLiBOdWxsYSBmYWNpbGlzaS4gTW9yYmkgbmVjIGRvbG9yIGRvbG9yLiBPcmNpIHZhcml1cyBuYXRvcXVlIHBlbmF0aWJ1cyBldCBtYWduaXMgZGlzIHBhcnR1cmllbnQgbW9udGVzLCBuYXNjZXR1ciByaWRpY3VsdXMgbXVzLiBDcmFzIGV0IGFsaXF1ZXQgbGVjdHVzLiBQZWxsZW50ZXNxdWUgc2l0IGFtZXQgZXJvcyBuaXNpLiBRdWlzcXVlIGFjIHNhcGllbiBpbiBzYXBpZW4gY29uZ3VlIGFjY3Vtc2FuLiBOdWxsYW0gaW4gcG9zdWVyZSBhbnRlLiBWZXN0aWJ1bHVtIGFudGUgaXBzdW0gcHJpbWlzIGluIGZhdWNpYnVzIG9yY2kgbHVjdHVzIGV0IHVsdHJpY2VzIHBvc3VlcmUgY3ViaWxpYSBDdXJhZTsgUHJvaW4gbGFjaW5pYSBsZW8gYSBuaWJoIGZyaW5naWxsYSBwaGFyZXRyYS4iKSxtZHgoImgyIix7ImlkIjoib3JjaSJ9LCJPcmNpIiksbWR4KCJwIixudWxsLCJPcmNpIHZhcml1cyBuYXRvcXVlIHBlbmF0aWJ1cyBldCBtYWduaXMgZGlzIHBhcnR1cmllbnQgbW9udGVzLCBuYXNjZXR1ciByaWRpY3VsdXMgbXVzLiBQcm9pbiB2ZW5lbmF0aXMgbGVjdHVzIGR1aSwgdmVsIHVsdHJpY2VzIGFudGUgYmliZW5kdW0gaGVuZHJlcml0LiBBZW5lYW4gZWdlc3RhcyBmZXVnaWF0IGR1aSBpZCBoZW5kcmVyaXQuIE9yY2kgdmFyaXVzIG5hdG9xdWUgcGVuYXRpYnVzIGV0IG1hZ25pcyBkaXMgcGFydHVyaWVudCBtb250ZXMsIG5hc2NldHVyIHJpZGljdWx1cyBtdXMuIEN1cmFiaXR1ciBpbiB0ZWxsdXMgbGFvcmVldCwgZWxlaWZlbmQgbnVuYyBpZCwgdml2ZXJyYSBsZW8uIFByb2luIHZ1bHB1dGF0ZSBub24gZG9sb3IgdmVsIHZ1bHB1dGF0ZS4gQ3VyYWJpdHVyIHByZXRpdW0gbG9ib3J0aXMgZmVsaXMsIHNpdCBhbWV0IGZpbmlidXMgbG9yZW0gc3VzY2lwaXQgdXQuIFNlZCBub24gbW9sbGlzIHJpc3VzLiBEdWlzIHNhZ2l0dGlzLCBtaSBpbiBldWlzbW9kIHRpbmNpZHVudCwgbnVuYyBtYXVyaXMgdmVzdGlidWx1bSB1cm5hLCBhdCBldWlzbW9kIGVzdCBlbGl0IHF1aXMgZXJhdC4gUGhhc2VsbHVzIGFjY3Vtc2FuIHZpdGFlIG5lcXVlIGV1IHBsYWNlcmF0LiBJbiBlbGVtZW50dW0gYXJjdSBuZWMgdGVsbHVzIGltcGVyZGlldCwgZWdldCBtYXhpbXVzIG51bGxhIHNvZGFsZXMuIEN1cmFiaXR1ciBldSBzYXBpZW4gZWdldCBuaXNsIHNvZGFsZXMgZmVybWVudHVtLiIpLG1keCgiaDIiLHsiaWQiOiJwaGFzZWxsdXMifSwiUGhhc2VsbHVzIiksbWR4KCJwIixudWxsLCJQaGFzZWxsdXMgcHVsdmluYXIgZXggaWQgY29tbW9kbyBpbXBlcmRpZXQuIFByYWVzZW50IG9kaW8gbmliaCwgc29sbGljaXR1ZGluIHNpdCBhbWV0IGZhdWNpYnVzIGlkLCBwbGFjZXJhdCBhdCBtZXR1cy4gRG9uZWMgdml0YWUgZXJvcyB2aXRhZSB0b3J0b3IgaGVuZHJlcml0IGZpbmlidXMuIEludGVyZHVtIGV0IG1hbGVzdWFkYSBmYW1lcyBhYyBhbnRlIGlwc3VtIHByaW1pcyBpbiBmYXVjaWJ1cy4gUXVpc3F1ZSB2aXRhZSBwdXJ1cyBkb2xvci4gRHVpcyBzdXNjaXBpdCBhYyBudWxsYSBldCBmaW5pYnVzLiBQaGFzZWxsdXMgYWMgc2VtIHNlZCBkdWkgZGljdHVtIGdyYXZpZGEuIFBoYXNlbGx1cyBlbGVpZmVuZCB2ZXN0aWJ1bHVtIGZhY2lsaXNpcy4gSW50ZWdlciBwaGFyZXRyYSBuZWMgZW5pbSB2aXRhZSBtYXR0aXMuIER1aXMgYXVjdG9yLCBsZWN0dXMgcXVpcyBjb25kaW1lbnR1bSBiaWJlbmR1bSwgbnVuYyBkb2xvciBhbGlxdWFtIG1hc3NhLCBpZCBiaWJlbmR1bSBvcmNpIHZlbGl0IHF1aXMgbWFnbmEuIFV0IHZvbHV0cGF0IG51bGxhIG51bmMsIHNlZCBpbnRlcmR1bSBtYWduYSBjb25kaW1lbnR1bSBub24uIFNlZCB1cm5hIG1ldHVzLCBzY2VsZXJpc3F1ZSB2aXRhZSBjb25zZWN0ZXR1ciBhLCBmZXVnaWF0IHF1aXMgbWFnbmEuIERvbmVjIGRpZ25pc3NpbSBvcm5hcmUgbmlzbCwgZWdldCB0ZW1wb3IgcmlzdXMgbWFsZXN1YWRhIHF1aXMuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}