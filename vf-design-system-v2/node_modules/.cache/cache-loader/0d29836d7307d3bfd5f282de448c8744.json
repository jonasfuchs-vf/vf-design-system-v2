{"remainingRequest":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/guidelines.md","dependencies":[{"path":"/Users/jonas.fuchs/ownCloud/UX-Fileserver/Design-System/docs/guidelines.md","mtime":1579075618440},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/.docusaurus/docusaurus-plugin-content-docs/site-own-cloud-ux-fileserver-design-system-docs-guidelines-md-a09.json","mtime":1580648063159},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/jonas.fuchs/design-system/docu-test/vf-design-system-v2/vf-design-system-v2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2pvbmFzLmZ1Y2hzL2Rlc2lnbi1zeXN0ZW0vZG9jdS10ZXN0L3ZmLWRlc2lnbi1zeXN0ZW0tdjIvdmYtZGVzaWduLXN5c3RlbS12Mi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidndWlkZWxpbmVzJyx0aXRsZTonVGhlIFNpbmdsZSBTb3VyY2Ugb2YgVHJ1dGgnLHNpZGViYXJfbGFiZWw6J0ludHJvZHVjdGlvbid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17ImlkIjoiZ3VpZGVsaW5lcyIsInRpdGxlIjoiVGhlIFNpbmdsZSBTb3VyY2Ugb2YgVHJ1dGgiLCJkZXNjcmlwdGlvbiI6IkluIGluZm9ybWF0aW9uIHN5c3RlbXMgZGVzaWduIGFuZCB0aGVvcnksIHNpbmdsZSBzb3VyY2Ugb2YgdHJ1dGggKFNTT1QpIGlzIHRoZSBwcmFjdGljZSBvZiBzdHJ1Y3R1cmluZyBpbmZvcm1hdGlvbiBtb2RlbHMgYW5kIGFzc29jaWF0ZWQgZGF0YSBzY2hlbWEgc3VjaCB0aGF0IGV2ZXJ5IGRhdGEgZWxlbWVudCBpcyBtYXN0ZXJlZCAob3IgZWRpdGVkKSBpbiBvbmx5IG9uZSBwbGFjZS4gQW55IHBvc3NpYmxlIGxpbmthZ2VzIHRvIHRoaXMgZGF0YSBlbGVtZW50IChwb3NzaWJseSBpbiBvdGhlciBhcmVhcyBvZiB0aGUgcmVsYXRpb25hbCBzY2hlbWEgb3IgZXZlbiBpbiBkaXN0YW50IGZlZGVyYXRlZCBkYXRhYmFzZXMpIGFyZSBieSByZWZlcmVuY2Ugb25seS4gQmVjYXVzZSBhbGwgb3RoZXIgbG9jYXRpb25zIG9mIHRoZSBkYXRhIGp1c3QgcmVmZXIgYmFjayB0byB0aGUgcHJpbWFyeSBcInNvdXJjZSBvZiB0cnV0aFwiIGxvY2F0aW9uLCB1cGRhdGVzIHRvIHRoZSBkYXRhIGVsZW1lbnQgaW4gdGhlIHByaW1hcnkgbG9jYXRpb24gcHJvcGFnYXRlIHRvIHRoZSBlbnRpcmUgc3lzdGVtIHdpdGhvdXQgdGhlIHBvc3NpYmlsaXR5IG9mIGEgZHVwbGljYXRlIHZhbHVlIHNvbWV3aGVyZSBiZWluZyBmb3Jnb3R0ZW4uIiwic291cmNlIjoiQHNpdGUvLi4vLi4vLi4vLi4vb3duQ2xvdWQvVVgtRmlsZXNlcnZlci9EZXNpZ24tU3lzdGVtL2RvY3MvZ3VpZGVsaW5lcy5tZCIsInBlcm1hbGluayI6Ii92Zi1kZXNpZ24tc3lzdGVtLXYyL2RvY3MvZ3VpZGVsaW5lcyIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlLy4uLy4uLy4uLy4uL293bkNsb3VkL1VYLUZpbGVzZXJ2ZXIvRGVzaWduLVN5c3RlbS9kb2NzL2d1aWRlbGluZXMubWQiLCJzaWRlYmFyX2xhYmVsIjoiSW50cm9kdWN0aW9uIiwic2lkZWJhciI6Imd1aWRlbGluZXMiLCJuZXh0Ijp7InRpdGxlIjoiRWNvIFN5c3RlbSIsInBlcm1hbGluayI6Ii92Zi1kZXNpZ24tc3lzdGVtLXYyL2RvY3MvZWNvLXN5c3RlbSJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCBjb25zdCByaWdodFRvYz1be3ZhbHVlOidIb3cgdG8gdXNlIHRoaXMgZ3VpZGVsaW5lJyxpZDonaG93LXRvLXVzZS10aGlzLWd1aWRlbGluZScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBJbiBpbmZvcm1hdGlvbiBzeXN0ZW1zIGRlc2lnbiBhbmQgdGhlb3J5LCBzaW5nbGUgc291cmNlIG9mIHRydXRoIChTU09UKSBpcyB0aGUgcHJhY3RpY2Ugb2Ygc3RydWN0dXJpbmcgaW5mb3JtYXRpb24gbW9kZWxzIGFuZCBhc3NvY2lhdGVkIGRhdGEgc2NoZW1hIHN1Y2ggdGhhdCBldmVyeSBkYXRhIGVsZW1lbnQgaXMgbWFzdGVyZWQgKG9yIGVkaXRlZCkgaW4gb25seSBvbmUgcGxhY2UuIEFueSBwb3NzaWJsZSBsaW5rYWdlcyB0byB0aGlzIGRhdGEgZWxlbWVudCAocG9zc2libHkgaW4gb3RoZXIgYXJlYXMgb2YgdGhlIHJlbGF0aW9uYWwgc2NoZW1hIG9yIGV2ZW4gaW4gZGlzdGFudCBmZWRlcmF0ZWQgZGF0YWJhc2VzKSBhcmUgYnkgcmVmZXJlbmNlIG9ubHkuIEJlY2F1c2UgYWxsIG90aGVyIGxvY2F0aW9ucyBvZiB0aGUgZGF0YSBqdXN0IHJlZmVyIGJhY2sgdG8gdGhlIHByaW1hcnkgInNvdXJjZSBvZiB0cnV0aCIgbG9jYXRpb24sIHVwZGF0ZXMgdG8gdGhlIGRhdGEgZWxlbWVudCBpbiB0aGUgcHJpbWFyeSBsb2NhdGlvbiBwcm9wYWdhdGUgdG8gdGhlIGVudGlyZSBzeXN0ZW0gd2l0aG91dCB0aGUgcG9zc2liaWxpdHkgb2YgYSBkdXBsaWNhdGUgdmFsdWUgc29tZXdoZXJlIGJlaW5nIGZvcmdvdHRlbi5gKSxtZHgoInAiLG51bGwsYERlcGxveW1lbnQgb2YgYW4gU1NPVCBhcmNoaXRlY3R1cmUgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGltcG9ydGFudCBpbiBlbnRlcnByaXNlIHNldHRpbmdzIHdoZXJlIGluY29ycmVjdGx5IGxpbmtlZCBkdXBsaWNhdGUgb3IgZGUtbm9ybWFsaXplZCBkYXRhIGVsZW1lbnRzIChhIGRpcmVjdCBjb25zZXF1ZW5jZSBvZiBpbnRlbnRpb25hbCBvciB1bmludGVudGlvbmFsIGRlbm9ybWFsaXphdGlvbiBvZiBhbnkgZXhwbGljaXQgZGF0YSBtb2RlbCkgcG9zZSBhIHJpc2sgZm9yIHJldHJpZXZhbCBvZiBvdXRkYXRlZCwgYW5kIHRoZXJlZm9yZSBpbmNvcnJlY3QsIGluZm9ybWF0aW9uLiBBIGNvbW1vbiBleGFtcGxlIHdvdWxkIGJlIHRoZSBlbGVjdHJvbmljIGhlYWx0aCByZWNvcmQsIHdoZXJlIGl0IGlzIGltcGVyYXRpdmUgdG8gYWNjdXJhdGVseSB2YWxpZGF0ZSBwYXRpZW50IGlkZW50aXR5IGFnYWluc3QgYSBzaW5nbGUgcmVmZXJlbnRpYWwgcmVwb3NpdG9yeSwgd2hpY2ggc2VydmVzIGFzIHRoZSBTU09ULiBEdXBsaWNhdGUgcmVwcmVzZW50YXRpb25zIG9mIGRhdGEgd2l0aGluIHRoZSBlbnRlcnByaXNlIHdvdWxkIGJlIGltcGxlbWVudGVkIGJ5IHRoZSB1c2Ugb2YgcG9pbnRlcnMgcmF0aGVyIHRoYW4gZHVwbGljYXRlIGRhdGFiYXNlIHRhYmxlcywgcm93cywgb3IgY2VsbHMuIFRoaXMgZW5zdXJlcyB0aGF0IGRhdGEgdXBkYXRlcyB0byBlbGVtZW50cyBpbiB0aGUgYXV0aG9yaXRhdGl2ZSBsb2NhdGlvbiBhcmUgY29tcHJlaGVuc2l2ZWx5IGRpc3RyaWJ1dGVkIHRvIGFsbCBmZWRlcmF0ZWQgZGF0YWJhc2UgY29uc3RpdHVlbmNpZXMgaW4gdGhlIGxhcmdlciBvdmVyYWxsIGVudGVycHJpc2UgYXJjaGl0ZWN0dXJlLmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Ildpa2lwZWRpYSJ9KSxgY2l0YXRpb24gbmVlZGVkYCkpLG1keCgiaDIiLHsiaWQiOiJob3ctdG8tdXNlLXRoaXMtZ3VpZGVsaW5lIn0sYEhvdyB0byB1c2UgdGhpcyBndWlkZWxpbmVgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7fSksYE1hdXJpcyB2ZXN0aWJ1bHVtIHVsbGFtY29ycGVyIG5pYmgsIHV0IHNlbXBlciBwdXJ1cyBwdWx2aW5hciB1dC4gRG9uZWMgdm9sdXRwYXQgb3JjaSBzaXQgYW1ldCBtYXVyaXMgbWFsZXN1YWRhLCBub24gcHVsdmluYXIgYXVndWUgYWxpcXVhbS4gVmVzdGlidWx1bSB1bHRyaWNpZXMgYXQgdXJuYSB1dCBzdXNjaXBpdC4gTW9yYmkgaWFjdWxpcywgZXJhdCBhdCBpbXBlcmRpZXQgc2VtcGVyLCBpcHN1bSBudWxsYSBzb2RhbGVzIGVyYXQsIGVnZXQgdGluY2lkdW50IGp1c3RvIGR1aSBxdWlzIGp1c3RvLiBQZWxsZW50ZXNxdWUgZGljdHVtIGJpYmVuZHVtIGRpYW0gYXQgYWxpcXVldC4gU2VkIHB1bHZpbmFyLCBkb2xvciBxdWlzIGZpbmlidXMgb3JuYXJlLCBlcm9zIG9kaW8gZmFjaWxpc2lzIGVyYXQsIGV1IHJob25jdXMgbnVuYyBkdWkgc2VkIGV4LiBOdW5jIGdyYXZpZGEgZHVpIG1hc3NhLCBzZWQgb3JuYXJlIGFyY3UgdGluY2lkdW50IHNpdCBhbWV0LiBNYWVjZW5hcyBlZmZpY2l0dXIgc2FwaWVuIG5lcXVlLCBhIGxhb3JlZXQgbGliZXJvIGZldWdpYXQgdXQuCmApKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}